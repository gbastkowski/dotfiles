[DEBUG] Watching for changes in setting files /Users/gunnar.bastkowski/.claude/settings.json, /Users/gunnar.bastkowski/git/rdm/.claude/settings.local.json...
[DEBUG] Applying permission update: Adding 77 allow rule(s) to destination 'localSettings': ["Bash(jira me)","Bash(jira issue view:*)","Bash(glab auth:*)","Bash(glab mr view:*)","Bash(kubectl get:*)","Bash(kubectl describe:*)","Bash(osascript:*)","Bash(git checkout:*)","Bash(glab mr create:*)","Bash(open:*)","WebFetch(domain:mvnrepository.com)","Bash(find:*)","Bash(glab mr update:*)","Bash(git push:*)","Bash(cd:*)","Bash(cd:*)","Bash(mkdir:*)","Bash(sbt:*)","Bash(rdmctl postgres psql:*)","Bash(git add:*)","Bash(git commit:*)","Bash(git reset:*)","Bash(rdmctl:*)","Bash(git branch:*)","Bash(git log:*)","WebSearch","Bash(emacsclient:*)","Bash(glab ci:*)","Bash(glab pipeline:*)","Read(//Users/gunnar.bastkowski/org/**)","Bash(glab mr list:*)","Bash(for project in ui core business-metrics errors debug periphery/rdas deployment/deploytest e2e/tests)","Bash(do echo \"=== $project ===\")","Bash(if [ -f \"/Users/gunnar.bastkowski/git/rdm/$project/project/Deps.scala\" ])","Bash(then echo \"Dependencies from Deps.scala:\")","Bash(grep:*)","Bash(else echo \"No Deps.scala found\")","Bash(fi)","Bash(done)","Bash(for project in ui core business-metrics errors debug utils/readings-import periphery/rdas periphery/articles periphery/contract-integrator periphery/mandants deployment/deploytest e2e/fake-rgc e2e/tests sbt/base-settings sbt/avro sbt/data-retention sbt/db-migration)","Bash(elif [ -f \"/Users/gunnar.bastkowski/git/rdm/$project/build.sbt\" ])","Bash(then echo \"Dependencies from build.sbt:\")","Bash(else echo \"No dependency file found\")","Bash(if [ -f \"/Users/gunnar.bastkowski/git/rdm/periphery/articles/project/Deps.scala\" ])","Bash(if [ -f \"/Users/gunnar.bastkowski/git/rdm/periphery/mandants/project/Deps.scala\" ])","Bash(for service in business-metrics core debug errors periphery/articles periphery/contract-integrator periphery/rdas ui deployment/deploytest e2e/fake-rgc)","Bash(do echo \"=== $service ===\")","Bash(if [ -d \"$service\" ])","Bash(then cd \"$service\")","Bash(else echo \"Directory not found\")","Bash(glab mr close:*)","Bash(cat:*)","Bash(kubectl logs:*)","Bash(terminal-notifier:*)","Bash(lsof:*)","Bash(tmux list-panes:*)","Bash(tmux capture-pane:*)","Bash(kafka-topics:*)","Bash(kafka-console-consumer:*)","Bash(glab job view:*)","Bash(glab:*)","Bash(sort:*)","Bash(ps:*)","Bash(nslookup:*)","Bash(kafka-consumer-groups:*)","Bash(tmux send-keys:*)","Bash(curl:*)","WebFetch(domain:pekko.apache.org)","Bash(jira issue list:*)","Bash(wdev)","Bash(kubectl config:*)","Bash(wpre)","Bash(tmux list-windows:*)","Bash(tmux new-window:*)","WebFetch(domain:prodmetal.rdm.ista.net)","Bash(tmux list-sessions:*)","WebFetch(domain:docs.gitlab.com)"]
[DEBUG] Found 0 plugins (0 enabled, 0 disabled)
[DEBUG] >>>>> getSkillsIfEnabled() CALLED <<<<<
[DEBUG] ENABLE_SKILLS value: true, type: boolean
[DEBUG] ENABLE_SKILLS check passed, loading skills...
[DEBUG] Loading skills from directories: managed=/Library/Application Support/ClaudeCode/.claude/skills, user=/Users/gunnar.bastkowski/.claude/skills, project=/Users/gunnar.bastkowski/git/rdm/.claude/skills
[DEBUG] >>>>> getPluginSkills CALLED <<<<<
[DEBUG] Creating shell snapshot for zsh (/bin/zsh)
[DEBUG] Looking for shell config file: /Users/gunnar.bastkowski/.zshrc
[DEBUG] Snapshots directory: /Users/gunnar.bastkowski/.claude/shell-snapshots
[DEBUG] Creating snapshot at: /Users/gunnar.bastkowski/.claude/shell-snapshots/snapshot-zsh-1760734212551-j1b3dw.sh
[DEBUG] Shell binary exists: true
[DEBUG] Execution timeout: 10000ms
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude/todos/d6a94d0b-94a2-4c1f-92bf-82b53aa5c2cd-agent-d6a94d0b-94a2-4c1f-92bf-82b53aa5c2cd.json.tmp.50631.1760734212566
[DEBUG] Temp file written successfully, size: 2 bytes
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude/todos/d6a94d0b-94a2-4c1f-92bf-82b53aa5c2cd-agent-d6a94d0b-94a2-4c1f-92bf-82b53aa5c2cd.json.tmp.50631.1760734212566 to /Users/gunnar.bastkowski/.claude/todos/d6a94d0b-94a2-4c1f-92bf-82b53aa5c2cd-agent-d6a94d0b-94a2-4c1f-92bf-82b53aa5c2cd.json
[DEBUG] File /Users/gunnar.bastkowski/.claude/todos/d6a94d0b-94a2-4c1f-92bf-82b53aa5c2cd-agent-d6a94d0b-94a2-4c1f-92bf-82b53aa5c2cd.json written atomically
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734212595
[DEBUG] Preserving file permissions: 100644
[DEBUG] Temp file written successfully, size: 715077 bytes
[DEBUG] Applied original permissions to temp file
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734212595 to /Users/gunnar.bastkowski/.claude.json
[DEBUG] File /Users/gunnar.bastkowski/.claude.json written atomically
[DEBUG] getPluginSkills: Processing 0 enabled plugins
[DEBUG] Total plugin skills loaded: 0
[DEBUG] Total plugin commands loaded: 0
[DEBUG] Registered 0 hooks from 0 plugins
[DEBUG] Loaded 0 skills total (managed: 0, user: 0, project: 0)
[DEBUG] getSkillsIfEnabled returning: 0 skill dir commands, 0 plugin skills
[DEBUG] Ripgrep first use test: PASSED (mode=builtin, path=/opt/homebrew/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg)
[DEBUG] Agent file /Users/gunnar.bastkowski/.claude/agents/kubectl-expert.md is missing required 'name' in frontmatter
[DEBUG] Failed to parse agent from /Users/gunnar.bastkowski/.claude/agents/kubectl-expert.md: Missing required "name" field in frontmatter
[DEBUG] Agent file /Users/gunnar.bastkowski/.claude/agents/glab-expert.md is missing required 'name' in frontmatter
[DEBUG] Failed to parse agent from /Users/gunnar.bastkowski/.claude/agents/glab-expert.md: Missing required "name" field in frontmatter
[DEBUG] Total plugin agents loaded: 0
[DEBUG] MCP server "voice-mode": Starting connection with timeout of 30000ms
[DEBUG] MCP server "puppeteer": Starting connection with timeout of 30000ms
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213069
[DEBUG] Preserving file permissions: 100644
[DEBUG] Temp file written successfully, size: 715077 bytes
[DEBUG] Applied original permissions to temp file
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213069 to /Users/gunnar.bastkowski/.claude.json
[DEBUG] File /Users/gunnar.bastkowski/.claude.json written atomically
[DEBUG] Getting matching hook commands for SessionStart with query: startup
[DEBUG] Found 0 hook matchers in settings
[DEBUG] Matched 0 unique hooks for query "startup" (0 before deduplication)
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213144
[DEBUG] Preserving file permissions: 100644
[DEBUG] Temp file written successfully, size: 714972 bytes
[DEBUG] Applied original permissions to temp file
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213144 to /Users/gunnar.bastkowski/.claude.json
[DEBUG] File /Users/gunnar.bastkowski/.claude.json written atomically
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213170
[DEBUG] Preserving file permissions: 100644
[DEBUG] Temp file written successfully, size: 714972 bytes
[DEBUG] Applied original permissions to temp file
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213170 to /Users/gunnar.bastkowski/.claude.json
[DEBUG] File /Users/gunnar.bastkowski/.claude.json written atomically
[DEBUG] AutoUpdaterWrapper: Installation type: npm-global, using native: false
[DEBUG] performStartupChecks called, ENABLE_PLUGINS=true
[DEBUG] Starting background plugin installations
[DEBUG] performBackgroundPluginInstallations called
[DEBUG] Setting installation status: 0 marketplaces, 0 installable plugins, 0 uninstallable plugins
[DEBUG] Loaded plugins - Enabled: 0, Disabled: 0, Commands: 0, Agents: 0, Errors: 0
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213231
[DEBUG] Preserving file permissions: 100644
[DEBUG] Temp file written successfully, size: 714972 bytes
[DEBUG] Applied original permissions to temp file
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213231 to /Users/gunnar.bastkowski/.claude.json
[DEBUG] File /Users/gunnar.bastkowski/.claude.json written atomically
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213253
[DEBUG] Preserving file permissions: 100644
[DEBUG] Temp file written successfully, size: 714972 bytes
[DEBUG] Applied original permissions to temp file
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213253 to /Users/gunnar.bastkowski/.claude.json
[DEBUG] File /Users/gunnar.bastkowski/.claude.json written atomically
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213294
[DEBUG] Preserving file permissions: 100644
[DEBUG] Temp file written successfully, size: 715077 bytes
[DEBUG] Applied original permissions to temp file
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213294 to /Users/gunnar.bastkowski/.claude.json
[DEBUG] File /Users/gunnar.bastkowski/.claude.json written atomically
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213374
[DEBUG] Preserving file permissions: 100644
[DEBUG] Temp file written successfully, size: 715077 bytes
[DEBUG] Applied original permissions to temp file
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734213374 to /Users/gunnar.bastkowski/.claude.json
[DEBUG] File /Users/gunnar.bastkowski/.claude.json written atomically
[DEBUG] Stream started - received first chunk
[DEBUG] Getting matching hook commands for SubagentStop with query: undefined
[DEBUG] Found 0 hook matchers in settings
[DEBUG] Matched 0 unique hooks for query "no match query" (0 before deduplication)
[ERROR] MCP server "voice-mode" Server stderr: Installed 121 packages in 747ms
[DEBUG] MCP server "puppeteer": Successfully connected to stdio server in 3584ms
[DEBUG] MCP server "puppeteer": Connection established with capabilities: {"hasTools":true,"hasPrompts":false,"hasResources":true,"serverVersion":{"name":"example-servers/puppeteer","version":"0.1.0"}}
[DEBUG] Shell snapshot creation failed: Command failed: /bin/zsh -c -l SNAPSHOT_FILE=/Users/gunnar.bastkowski/.claude/shell-snapshots/snapshot-zsh-1760734212551-j1b3dw.sh
      source "/Users/gunnar.bastkowski/.zshrc" < /dev/null
      
      # First, create/clear the snapshot file
      echo "# Snapshot file" >| "$SNAPSHOT_FILE"
      
      # When this file is sourced, we first unalias to avoid conflicts
      # This is necessary because aliases get "frozen" inside function definitions at definition time,
      # which can cause unexpected behavior when functions use commands that conflict with aliases
      echo "# Unset all aliases to avoid conflicts with functions" >> "$SNAPSHOT_FILE"
      echo "unalias -a 2>/dev/null || true" >> "$SNAPSHOT_FILE"
      
      
      echo "# Functions" >> "$SNAPSHOT_FILE"
      
      # Force autoload all functions first
      typeset -f > /dev/null 2>&1
      
      # Now get user function names - filter system ones and write directly to file
      typeset +f | grep -vE '^(_|__)' | while read func; do
        typeset -f "$func" >> "$SNAPSHOT_FILE"
      done
    
      echo "# Shell Options" >> "$SNAPSHOT_FILE"
      setopt | sed 's/^/setopt /' | head -n 1000 >> "$SNAPSHOT_FILE"
    
      echo "# Aliases" >> "$SNAPSHOT_FILE"
      # Filter out winpty aliases on Windows to avoid "stdin is not a tty" errors
      # Git Bash automatically creates aliases like "alias node='winpty node.exe'" for
      # programs that need Win32 Console in mintty, but winpty fails when there's no TTY
      if [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]]; then
        alias | grep -v "='winpty " | sed 's/^alias //g' | sed 's/^/alias -- /' | head -n 1000 >> "$SNAPSHOT_FILE"
      else
        alias | sed 's/^alias //g' | sed 's/^/alias -- /' | head -n 1000 >> "$SNAPSHOT_FILE"
      fi
  
      
      
      # Check for rg availability
      echo "# Check for rg availability" >> "$SNAPSHOT_FILE"
      echo "if ! command -v rg >/dev/null 2>&1; then" >> "$SNAPSHOT_FILE"
      echo '  alias rg='"'/opt/homebrew/lib/node_modules/\@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg'" >> "$SNAPSHOT_FILE"
      echo "fi" >> "$SNAPSHOT_FILE"
      
      # Add PATH to the file
      echo "export PATH='/Users/gunnar.bastkowski/.local/bin:/Users/gunnar.bastkowski/.sdkman/candidates/sbt/current/bin:/Users/gunnar.bastkowski/.sdkman/candidates/kotlin/current/bin:/Users/gunnar.bastkowski/.sdkman/candidates/java/21.0.6-tem/bin:/Users/gunnar.bastkowski/.sdkman/candidates/gradle/current/bin:/Users/gunnar.bastkowski/opt/anaconda3/bin:/Users/gunnar.bastkowski/.rbenv/shims:/Users/gunnar.bastkowski/.rbenv/bin:/Users/gunnar.bastkowski/Android/Sdk/platform-tools:/Users/gunnar.bastkowski/Android/Sdk/tools/bin:/usr/local/opt/sqlite/bin:./node_modules/.bin:/opt/homebrew/bin/python3/opt/homebrew/bin/python3:/Users/gunnar.bastkowski/.bin:/Users/gunnar.bastkowski/go/bin:/Users/gunnar.bastkowski/pyenvs/rdm/bin:/Users/gunnar.bastkowski/git/rdm/devenv:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/Users/gunnar.bastkowski/.cargo/bin:/Applications/iTerm.app/Contents/Resources/utilities:/Users/gunnar.bastkowski/Library/Application Support/Coursier/bin:/Users/gunnar.bastkowski/.emacs.doom/bin:/home/gunnar/.local/bin'" >> "$SNAPSHOT_FILE"
  
      
      # Exit silently on success, only report errors
      if [ ! -f "$SNAPSHOT_FILE" ]; then
        echo "Error: Snapshot file was not created at $SNAPSHOT_FILE" >&2
        exit 1
      fi
    
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
[DEBUG] Error details:
[DEBUG] - Error code: null
[DEBUG] - Error signal: SIGTERM
[DEBUG] - Error killed: true
[DEBUG] - Shell path: /bin/zsh
[DEBUG] - Config file: /Users/gunnar.bastkowski/.zshrc
[DEBUG] - Config file exists: true
[DEBUG] - Working directory: /Users/gunnar.bastkowski/git/rdm
[DEBUG] - Claude home: /Users/gunnar.bastkowski/.claude
[DEBUG] Full snapshot script:
SNAPSHOT_FILE=/Users/gunnar.bastkowski/.claude/shell-snapshots/snapshot-zsh-1760734212551-j1b3dw.sh
      source "/Users/gunnar.bastkowski/.zshrc" < /dev/null
      
      # First, create/clear the snapshot file
      echo "# Snapshot file" >| "$SNAPSHOT_FILE"
      
      # When this file is sourced, we first unalias to avoid conflicts
      # This is necessary because aliases get "frozen" inside function definitions at definition time,
      # which can cause unexpected behavior when functions use commands that conflict with aliases
      echo "# Unset all aliases to avoid conflicts with functions" >> "$SNAPSHOT_FILE"
      echo "unalias -a 2>/dev/null || true" >> "$SNAPSHOT_FILE"
      
      
      echo "# Functions" >> "$SNAPSHOT_FILE"
      
      # Force autoload all functions first
      typeset -f > /dev/null 2>&1
      
      # Now get user function names - filter system ones and write directly to file
      typeset +f | grep -vE '^(_|__)' | while read func; do
        typeset -f "$func" >> "$SNAPSHOT_FILE"
      done
    
      echo "# Shell Options" >> "$SNAPSHOT_FILE"
      setopt | sed 's/^/setopt /' | head -n 1000 >> "$SNAPSHOT_FILE"
    
      echo "# Aliases" >> "$SNAPSHOT_FILE"
      # Filter out winpty aliases on Windows to avoid "stdin is not a tty" errors
      # Git Bash automatically creates aliases like "alias node='winpty node.exe'" for
      # programs that need Win32 Console in mintty, but winpty fails when there's no TTY
      if [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]]; then
        alias | grep -v "='winpty " | sed 's/^alias //g' | sed 's/^/alias -- /' | head -n 1000 >> "$SNAPSHOT_FILE"
      else
        alias | sed 's/^alias //g' | sed 's/^/alias -- /' | head -n 1000 >> "$SNAPSHOT_FILE"
      fi
  
      
      
      # Check for rg availability
      echo "# Check for rg availability" >> "$SNAPSHOT_FILE"
      echo "if ! command -v rg >/dev/null 2>&1; then" >> "$SNAPSHOT_FILE"
      echo '  alias rg='"'/opt/homebrew/lib/node_modules/\@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg'" >> "$SNAPSHOT_FILE"
      echo "fi" >> "$SNAPSHOT_FILE"
      
      # Add PATH to the file
      echo "export PATH='/Users/gunnar.bastkowski/.local/bin:/Users/gunnar.bastkowski/.sdkman/candidates/sbt/current/bin:/Users/gunnar.bastkowski/.sdkman/candidates/kotlin/current/bin:/Users/gunnar.bastkowski/.sdkman/candidates/java/21.0.6-tem/bin:/Users/gunnar.bastkowski/.sdkman/candidates/gradle/current/bin:/Users/gunnar.bastkowski/opt/anaconda3/bin:/Users/gunnar.bastkowski/.rbenv/shims:/Users/gunnar.bastkowski/.rbenv/bin:/Users/gunnar.bastkowski/Android/Sdk/platform-tools:/Users/gunnar.bastkowski/Android/Sdk/tools/bin:/usr/local/opt/sqlite/bin:./node_modules/.bin:/opt/homebrew/bin/python3/opt/homebrew/bin/python3:/Users/gunnar.bastkowski/.bin:/Users/gunnar.bastkowski/go/bin:/Users/gunnar.bastkowski/pyenvs/rdm/bin:/Users/gunnar.bastkowski/git/rdm/devenv:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/Users/gunnar.bastkowski/.cargo/bin:/Applications/iTerm.app/Contents/Resources/utilities:/Users/gunnar.bastkowski/Library/Application Support/Coursier/bin:/Users/gunnar.bastkowski/.emacs.doom/bin:/home/gunnar/.local/bin'" >> "$SNAPSHOT_FILE"
  
      
      # Exit silently on success, only report errors
      if [ ! -f "$SNAPSHOT_FILE" ]; then
        echo "Error: Snapshot file was not created at $SNAPSHOT_FILE" >&2
        exit 1
      fi
[DEBUG] No stdout output captured
[DEBUG] stderr output (248 chars): zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
[ERROR] Error: Error: Failed to create shell snapshot: Command failed: /bin/zsh -c -l SNAPSHOT_FILE=/Users/gunnar.bastkowski/.claude/shell-snapshots/snapshot-zsh-1760734212551-j1b3dw.sh
      source "/Users/gunnar.bastkowski/.zshrc" < /dev/null
      
      # First, create/clear the snapshot file
      echo "# Snapshot file" >| "$SNAPSHOT_FILE"
      
      # When this file is sourced, we first unalias to avoid conflicts
      # This is necessary because aliases get "frozen" inside function definitions at definition time,
      # which can cause unexpected behavior when functions use commands that conflict with aliases
      echo "# Unset all aliases to avoid conflicts with functions" >> "$SNAPSHOT_FILE"
      echo "unalias -a 2>/dev/null || true" >> "$SNAPSHOT_FILE"
      
      
      echo "# Functions" >> "$SNAPSHOT_FILE"
      
      # Force autoload all functions first
      typeset -f > /dev/null 2>&1
      
      # Now get user function names - filter system ones and write directly to file
      typeset +f | grep -vE '^(_|__)' | while read func; do
        typeset -f "$func" >> "$SNAPSHOT_FILE"
      done
    
      echo "# Shell Options" >> "$SNAPSHOT_FILE"
      setopt | sed 's/^/setopt /' | head -n 1000 >> "$SNAPSHOT_FILE"
    
      echo "# Aliases" >> "$SNAPSHOT_FILE"
      # Filter out winpty aliases on Windows to avoid "stdin is not a tty" errors
      # Git Bash automatically creates aliases like "alias node='winpty node.exe'" for
      # programs that need Win32 Console in mintty, but winpty fails when there's no TTY
      if [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]]; then
        alias | grep -v "='winpty " | sed 's/^alias //g' | sed 's/^/alias -- /' | head -n 1000 >> "$SNAPSHOT_FILE"
      else
        alias | sed 's/^alias //g' | sed 's/^/alias -- /' | head -n 1000 >> "$SNAPSHOT_FILE"
      fi
  
      
      
      # Check for rg availability
      echo "# Check for rg availability" >> "$SNAPSHOT_FILE"
      echo "if ! command -v rg >/dev/null 2>&1; then" >> "$SNAPSHOT_FILE"
      echo '  alias rg='"'/opt/homebrew/lib/node_modules/\@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg'" >> "$SNAPSHOT_FILE"
      echo "fi" >> "$SNAPSHOT_FILE"
      
      # Add PATH to the file
      echo "export PATH='/Users/gunnar.bastkowski/.local/bin:/Users/gunnar.bastkowski/.sdkman/candidates/sbt/current/bin:/Users/gunnar.bastkowski/.sdkman/candidates/kotlin/current/bin:/Users/gunnar.bastkowski/.sdkman/candidates/java/21.0.6-tem/bin:/Users/gunnar.bastkowski/.sdkman/candidates/gradle/current/bin:/Users/gunnar.bastkowski/opt/anaconda3/bin:/Users/gunnar.bastkowski/.rbenv/shims:/Users/gunnar.bastkowski/.rbenv/bin:/Users/gunnar.bastkowski/Android/Sdk/platform-tools:/Users/gunnar.bastkowski/Android/Sdk/tools/bin:/usr/local/opt/sqlite/bin:./node_modules/.bin:/opt/homebrew/bin/python3/opt/homebrew/bin/python3:/Users/gunnar.bastkowski/.bin:/Users/gunnar.bastkowski/go/bin:/Users/gunnar.bastkowski/pyenvs/rdm/bin:/Users/gunnar.bastkowski/git/rdm/devenv:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/Users/gunnar.bastkowski/.cargo/bin:/Applications/iTerm.app/Contents/Resources/utilities:/Users/gunnar.bastkowski/Library/Application Support/Coursier/bin:/Users/gunnar.bastkowski/.emacs.doom/bin:/home/gunnar/.local/bin'" >> "$SNAPSHOT_FILE"
  
      
      # Exit silently on success, only report errors
      if [ ! -f "$SNAPSHOT_FILE" ]; then
        echo "Error: Snapshot file was not created at $SNAPSHOT_FILE" >&2
        exit 1
      fi
    
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v
zsh:typeset:21: bad option: +v

    at file:///opt/homebrew/lib/node_modules/@anthropic-ai/claude-code/cli.js:1217:133
    at ChildProcess.exithandler (node:child_process:424:5)
    at ChildProcess.emit (node:events:508:28)
    at ChildProcess.emit (node:domain:489:12)
    at maybeClose (node:internal/child_process:1101:16)
    at ChildProcess._handle.onexit (node:internal/child_process:305:5)
[ERROR] MCP server "voice-mode" Server stderr: /Users/gunnar.bastkowski/.cache/uv/archive-v0/F5bNSfG0iJM8j5dPMGIlC/lib/python3.10/site-packages/pydub/utils.py:300: DeprecationWarning: invalid escape sequence '\('
  m = re.match('([su]([0-9]{1,2})p?) \(([0-9]{1,2}) bit\)$', token)
/Users/gunnar.bastkowski/.cache/uv/archive-v0/F5bNSfG0iJM8j5dPMGIlC/lib/python3.10/site-packages/pydub/utils.py:301: DeprecationWarning: invalid escape sequence '\('
  m2 = re.match('([su]([0-9]{1,2})p?)( \(default\))?$', token)
[ERROR] MCP server "voice-mode" Server stderr: /Users/gunnar.bastkowski/.cache/uv/archive-v0/F5bNSfG0iJM8j5dPMGIlC/lib/python3.10/site-packages/pydub/utils.py:310: DeprecationWarning: invalid escape sequence '\('
  elif re.match('(flt)p?( \(default\))?$', token):
/Users/gunnar.bastkowski/.cache/uv/archive-v0/F5bNSfG0iJM8j5dPMGIlC/lib/python3.10/site-packages/pydub/utils.py:314: DeprecationWarning: invalid escape sequence '\('
  elif re.match('(dbl)p?( \(default\))?$', token):
[ERROR] MCP server "voice-mode" Server stderr: 2025-10-17 22:50:31,416 - voicemode - INFO - Starting VoiceMode v6.0.0
[ERROR] MCP server "voice-mode" Server stderr: 2025-10-17 22:50:31,416 - voicemode - INFO - Event logging enabled, writing to /Users/gunnar.bastkowski/.voicemode/logs/events
[ERROR] MCP server "voice-mode" Server stderr: ╭────────────────────────────────────────────────────────────────────────────╮
│                                                                            │
│        _ __ ___  _____           __  __  _____________    ____    ____     │
│       _ __ ___ .'____/___ ______/ /_/  |/  / ____/ __ \  |___ \  / __ \    │
│      _ __ ___ / /_  / __ `/ ___/ __/ /|_/ / /   / /_/ /  ___/ / / / / /    │
│     _ __ ___ / __/ / /_/ (__  ) /_/ /  / / /___/ ____/  /  __/_/ /_/ /     │
│    _ __ ___ /_/    \____/____/\__/_/  /_/\____/_/      /_____(*)____/      │
│                                                                            │
│                                                                            │
│                                FastMCP  2.0                                │
│                                                                            │
│                                                                            │
│                 🖥️  Server name:     voicemode                              │
│                 📦 Transport:       STDIO                                  │
│                                                                            │
│                 🏎️  FastMCP version: 2.12.5                                 │
│                 🤝 MCP SDK version: 1.16.0                                 │
│                                                                            │
│                 📚 Docs:            https://gofastmcp.com                  │
│                 🚀 Deploy:          https://fastmcp.cloud                  │
│                                                                            │
╰────────────────────────────────────────────────────────────────────────────╯
[ERROR] MCP server "voice-mode" Server stderr: [10/17/25 22:50:31] INFO     Starting MCP server 'voicemode' with server.py:1502
                             transport 'stdio'
[DEBUG] MCP server "voice-mode": Successfully connected to stdio server in 18437ms
[DEBUG] MCP server "voice-mode": Connection established with capabilities: {"hasTools":true,"hasPrompts":true,"hasResources":true,"serverVersion":{"name":"voicemode","version":"1.16.0"}}
[ERROR] MCP server "voice-mode" Server stderr: 2025-10-17 22:50:31,487 - mcp.server.lowlevel.server - INFO - Processing request of type ListToolsRequest
2025-10-17 22:50:31,488 - mcp.server.lowlevel.server - INFO - Processing request of type ListPromptsRequest
2025-10-17 22:50:31,489 - mcp.server.lowlevel.server - INFO - Processing request of type ListResourcesRequest
[DEBUG] Skills and commands included in Skill tool:
[DEBUG] Slash commands included in SlashCommand tool: /system-upgrade, /commit, /rebase, /push, /compile
[DEBUG] AutoUpdaterWrapper: Installation type: npm-global, using native: false
[DEBUG] Getting matching hook commands for SessionEnd with query: undefined
[DEBUG] Found 0 hook matchers in settings
[DEBUG] Matched 0 unique hooks for query "no match query" (0 before deduplication)
[DEBUG] MCP server "puppeteer": Sending SIGINT to MCP server process
[DEBUG] MCP server "voice-mode": Sending SIGINT to MCP server process
[DEBUG] FileHistory: Added snapshot for 2f974359-1ce0-4548-af1d-eec8f05a39b2, tracking 0 files
[DEBUG] Rendering user message with 1 content blocks
[DEBUG] Block 0: <command-name>/exit</command-name>
            <command-message>exit</command-message>
            <...
[DEBUG] UserCommandMessage rendering: "exit" (args: "none")
[DEBUG] isSkillFormat: false, prefix: "/"
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734235012
[DEBUG] Preserving file permissions: 100644
[DEBUG] Temp file written successfully, size: 715077 bytes
[DEBUG] Applied original permissions to temp file
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734235012 to /Users/gunnar.bastkowski/.claude.json
[DEBUG] File /Users/gunnar.bastkowski/.claude.json written atomically
[DEBUG] MCP server "puppeteer": SIGINT failed, sending SIGTERM to MCP server process
[DEBUG] MCP server "voice-mode": SIGINT failed, sending SIGTERM to MCP server process
[DEBUG] MCP server "puppeteer": MCP server process exited cleanly
[DEBUG] MCP server "voice-mode": MCP server process exited cleanly
[DEBUG] Metrics opt-out API response: enabled=true
[DEBUG] BigQuery metrics exported successfully
[DEBUG] API Response: {
  "accepted_count": 8,
  "rejected_count": 0
}
[DEBUG] BigQuery metrics exporter flush complete
[DEBUG] BigQuery metrics exporter flush complete
[DEBUG] BigQuery metrics exporter shutdown complete
[DEBUG] Writing to temp file: /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734235578
[DEBUG] Preserving file permissions: 100644
[DEBUG] Temp file written successfully, size: 715472 bytes
[DEBUG] Applied original permissions to temp file
[DEBUG] Renaming /Users/gunnar.bastkowski/.claude.json.tmp.50631.1760734235578 to /Users/gunnar.bastkowski/.claude.json
[DEBUG] File /Users/gunnar.bastkowski/.claude.json written atomically
