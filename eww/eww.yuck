(include "./calendar.yuck")
(include "./modules/github.yuck")
(include "./system.yuck")
(include "./modules/network.yuck")
(include "./modules/shutdown.yuck")
(include "./modules/volume.yuck")
(include "./modules/weather.yuck")

(defwindow bar
  :monitor 0
  :geometry (geometry :x "0%" :y "0%" :width "100%" :height "50px" :anchor "top center")
  :stacking "overlay"
  :exclusive true
  (bar))

(defwidget bar []
  (centerbox        :orientation        "h"
                    :class              "topbar"
    (box            :orientation        "h"
                    :space-evenly       false
                    :spacing            30
      (shutdown)
      (workspaces))
    (box            :orientation        "h"
                    :space-evenly       false
                    :spacing            30
      (clock)
      (weather-icon)
      (github))
    (box            :orientation        "h"
                    :space-evenly       false
                    :spacing            30
                    :halign             "end"
      (systray      :spacing            5
                    :prepend-new        true)
      (sidestuff))))

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 0
    (workspace :no 1)
    (workspace :no 2)
    (workspace :no 3)
    (workspace :no 4)
    (workspace :no 5)))

(defwidget workspace [no]
  (box :class { active-workspace == no ? "active" : "inactive" }
    (button :onclick "hyprctl dispatch workspace ${no}" no)))

(defwidget sidestuff []
  (box              :orientation        "h"
                    :space-evenly       false
                    :halign             "end"
                    :spacing            20
    (volume)
    (network)
    (box          :space-evenly true
      (metric     :label        "ï¡š"
                  :value        {EWW_RAM.used_mem_perc}
                  :onchange     "")
      (metric     :label        "ðŸ’¾"
                  :value        {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
                  :onchange     ""))
    (eventbox     :onclick      "~/.config/eww/system.sh --toggle"
      (image      :path         "icons/utilities-system-monitor-symbolic.svg"
                  :image-height "24"))))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "ðŸŽµ${music}" : ""}))

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))


(deflisten active-workspace :initial "1" `~/.config/eww/listen_hyprland_events.sh`)
(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll time :interval "10s" "date '+%H:%M'")
(defpoll date :interval "10s" "date '+%b %d, %Y'")

(defwindow powermenu
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry :width "100%" :height "100%")
  (powermenu_layout))
